{"version":3,"sources":["store/action.js","store/reducers.js","components/FilmCard/FilmCard.js","components/FilmsList/FilmsList.js","components/FormField/FormField.js","validation.js","components/NewFilm/NewFilm.js","components/FilmDetails/FilmDetails.js","App.js","index.js"],"names":["ACTION_TYPES","ADD_NEW_FILM","addNewFilm","film","type","payload","store","createStore","state","action","find","id","Error","concat","Object","toConsumableArray","title","description","imgUrl","imdbUrl","devToolsEnhancer","FilmCard","_ref","react_default","a","createElement","className","react_router_dom","to","src","alt","href","defaultProps","FilmsList","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","films","getState","inherits","createClass","key","value","map","components_FilmCard_FilmCard","assign","Component","FormField","memo","props","error","name","label","onChange","placeholder","inputClass","cx","is-danger","controlClass","has-icons-right","Control","htmlFor","required","initialState","formValidators","NewFilm","handleChange","_ref$target","target","setState","prevState","defineProperty","handleSubmit","e","preventDefault","onAdd","formValue","getFormValue","_this$validate","validate","hasError","errors","newState","_ref3","_ref4","slicedToArray","fromEntries","entries","reduce","acc","entry","_objectSpread","_ref5","_ref6","fieldData","validator","some","errorData","_this$state","onSubmit","components_FormField_FormField","FilmDetails","_store$getState$find","item","API_URL","App","searchWord","handleAddFilm","dispatch","shortid","generate","handleSearchChange","_ref2","searchFilm","asyncToGenerator","regenerator_default","mark","_callee","filmResponce","Title","Plot","Poster","Website","imdbID","wrap","_context","prev","next","fetch","sent","json","undefined","t0","message","stop","_x","_this2","unSubscribe","subscribe","forceUpdate","_this3","onClick","react_router","exact","path","component","FilmsList_FilmsList_FilmsList","match","components_FilmDetails_FilmDetails","params","components_NewFilm_NewFilm","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.3c188754.chunk.js","sourcesContent":["export const ACTION_TYPES = {\n  ADD_NEW_FILM: 'FILM::ADD',\n};\n\nexport const addNewFilm = film => ({\n  type: ACTION_TYPES.ADD_NEW_FILM,\n  payload: film,\n});\n","import { createStore } from 'redux';\nimport { devToolsEnhancer } from 'redux-devtools-extension';\n\nimport {\n  ACTION_TYPES,\n  addNewFilm,\n} from './action';\n\nfunction reducer(state, action) {\n  const { ADD_NEW_FILM } = ACTION_TYPES;\n\n  switch (action.type) {\n    case ADD_NEW_FILM: {\n      if (state.find(film => film.id === action.payload.id)) {\n        throw new Error('The film is present');\n      }\n\n      return [\n        ...state,\n        action.payload,\n      ];\n    }\n\n    default:\n      return state;\n  }\n}\n\nconst films = [{\n  id: '1',\n  title: 'Groundhog Day',\n  description: `A weatherman finds himself inexplicably\n living the same day over and over again.`,\n  imgUrl: 'https://m.media-amazon.com/images/M/MV5BZWIxNzM5YzQtY2FmMS00Yjc3LWI1ZjUtNGVjMjMzZTIxZTIxXkEyXkFqcGdeQXVyNjU0OTQ0OTY@._V1_SY1000_CR0,0,671,1000_AL_.jpg',\n  imdbUrl: 'https://www.imdb.com/title/tt0107048/',\n}];\n\nexport const store = createStore(\n  reducer,\n  films,\n  devToolsEnhancer(addNewFilm())\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './FilmCard.scss';\n\nimport { Link } from 'react-router-dom';\n\nconst FilmCard = ({\n  id,\n  title,\n  description,\n  imgUrl,\n  imdbUrl,\n}) => (\n\n  <div className=\"card\">\n    <Link to={`/film/${id}`}>\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"https://images-na.ssl-images-amazon.com/images/I/315W5zxAnTL._SY355_.png\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-4\">{title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {description}\n          <br />\n        </div>\n      </div>\n    </Link>\n    <a href={imdbUrl}>IMDB</a>\n  </div>\n);\n\nFilmCard.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nFilmCard.defaultProps = {\n  description: '',\n};\n\nexport default FilmCard;\n","import React, { Component } from 'react';\nimport './FilmsList.scss';\n\nimport { store } from '../../store/reducers';\nimport FilmCard from '../FilmCard/FilmCard';\n\nexport class FilmsList extends Component {\n  state = {\n    films: store.getState(),\n  };\n\n  render() {\n    const { films } = this.state;\n\n    return (\n      <div className=\"films\">\n        {films.map(film => (\n          <FilmCard key={film.id} {...film} />\n        ))}\n      </div>\n    );\n  }\n}\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport './FormField.scss';\n\nconst FormField = memo((props) => {\n  const {\n    error,\n    name,\n    label,\n    type,\n    onChange,\n    placeholder,\n    value,\n  } = props;\n\n  const inputClass = cx('input', { 'is-danger': !!error });\n  const controlClass = cx('control', { 'has-icons-right': !!error });\n\n  const Control = type === 'textarea' ? type : 'input';\n\n  return (\n    <div className=\"field\">\n      <label htmlFor={name} className=\"label\">\n        {label}\n      </label>\n      <div className={controlClass}>\n        <Control\n          name={name}\n          id={name}\n          className={inputClass}\n          type={type}\n          placeholder={placeholder}\n          value={value}\n          onChange={onChange}\n        />\n        {error && (\n          <span className=\"icon is-small is-right\">\n            <i className=\"fas fa-exclamation-triangle\" />\n          </span>\n        )}\n      </div>\n\n      {error && (\n        <p className=\"help is-danger\">{error}</p>\n      )}\n    </div>\n  );\n});\n\nFormField.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  type: PropTypes.string,\n  error: PropTypes.string,\n  placeholder: PropTypes.string,\n};\n\nFormField.defaultProps = {\n  error: '',\n  type: 'text',\n  placeholder: 'Type text here',\n};\n\nexport default FormField;\n","export const required = (name, value) => {\n  return value\n    ? null\n    : `Field ${name} is required`;\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport FormField from '../FormField/FormField';\nimport { required } from '../../validation';\n\nconst initialState = {\n  title: {\n    value: '',\n    error: null,\n  },\n  description: {\n    value: '',\n    error: null,\n  },\n  imgUrl: {\n    value: '',\n    error: null,\n  },\n  imdbUrl: {\n    value: '',\n    error: null,\n  },\n};\n\nconst formValidators = {\n  title: required,\n  imgUrl: required,\n  imdbUrl: required,\n};\n\nclass NewFilm extends Component {\n  state = initialState;\n\n  getFormValue() {\n    return Object.entries(this.state)\n      .reduce((acc, entry) => ({\n        ...acc,\n        [entry[0]]: entry[1].value,\n      }), {});\n  }\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState(prevState => ({\n      [name]: {\n        value,\n        error: prevState[name].error,\n      },\n    }));\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const { onAdd } = this.props;\n    const formValue = this.getFormValue();\n\n    const { hasError, errors } = this.validate();\n\n    if (hasError) {\n      this.setState((prevState) => {\n        const newState = errors.map(([name, error]) => {\n          return [\n            name,\n            {\n              error,\n              value: prevState[name].value,\n            },\n          ];\n        });\n\n        return Object.fromEntries(newState);\n      });\n    } else {\n      this.setState(initialState);\n      onAdd(formValue);\n    }\n  };\n\n  validate() {\n    const errors = Object.entries(this.state)\n      .map(([name, fieldData]) => {\n        const validator = formValidators[name];\n        const error = validator\n          ? validator(name, fieldData.value)\n          : null;\n\n        return [name, error];\n      });\n\n    const hasError = errors\n      .some(errorData => !!errorData[1]);\n\n    return {\n      hasError,\n      errors,\n    };\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n    } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <FormField\n          {...title}\n          name=\"title\"\n          placeholder=\"Input film title\"\n          label=\"Title\"\n          onChange={this.handleChange}\n        />\n        <FormField\n          {...description}\n          type=\"textarea\"\n          name=\"description\"\n          placeholder=\"Input film description\"\n          label=\"Description\"\n          onChange={this.handleChange}\n        />\n        <FormField\n          {...imgUrl}\n          name=\"imgUrl\"\n          placeholder=\"Paste image url\"\n          label=\"Image url\"\n          onChange={this.handleChange}\n        />\n        <FormField\n          {...imdbUrl}\n          name=\"imdbUrl\"\n          placeholder=\"Paste IMDB url\"\n          label=\"IMDB url\"\n          onChange={this.handleChange}\n        />\n\n        <button\n          type=\"submit\"\n          className=\"button is-primary\"\n        >\n          Add film\n        </button>\n      </form>\n    );\n  }\n}\n\nNewFilm.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n\nexport default NewFilm;\n","/* eslint-disable max-len */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { store } from '../../store/reducers';\n\nconst FilmDetails = ({ id }) => {\n  const {\n    title,\n    imgUrl,\n    description,\n    imdbUrl,\n  } = store.getState().find(item => item.id === id);\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"https://images-na.ssl-images-amazon.com/images/I/315W5zxAnTL._SY355_.png\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-4\">{title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {description}\n          <br />\n          <a href={imdbUrl}>IMDB</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nFilmDetails.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default FilmDetails;\n","import React, { Component } from 'react';\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n} from 'react-router-dom';\n\nimport shortid from 'shortid';\nimport './App.scss';\n\nimport { FilmsList } from './components/FilmsList';\nimport NewFilm from './components/NewFilm/NewFilm';\nimport FormField from './components/FormField/FormField';\nimport FilmDetails from './components/FilmDetails/FilmDetails';\n\nimport { store } from './store/reducers';\n\nimport {\n  addNewFilm,\n} from './store/action';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=2f4a38c9&t=';\n\nexport class App extends Component {\n  state = {\n    searchWord: '',\n    error: null,\n  };\n\n  componentDidMount() {\n    this.unSubscribe = store.subscribe(() => {\n      this.setState({ error: null });\n      this.forceUpdate();\n    });\n  }\n\n  componentWillUnmount() {\n    this.unSubscribe();\n  }\n\n  handleAddFilm = ({\n    title,\n    description,\n    imgUrl,\n    imdbUrl,\n  }) => {\n    store.dispatch(addNewFilm({\n      id: shortid.generate(),\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n    }));\n  };\n\n  handleSearchChange = ({ target }) => this.setState({\n    searchWord: target.value,\n    error: null,\n  });\n\n  searchFilm = async(searchWord) => {\n    try {\n      const filmResponce = await fetch(`${API_URL}${searchWord}`);\n      const {\n        Title,\n        Plot,\n        Poster,\n        Website,\n        imdbID,\n      } = await filmResponce.json();\n\n      if (imdbID === undefined) {\n        throw new Error('Film not found');\n      }\n\n      store.dispatch(addNewFilm({\n        id: imdbID,\n        title: Title,\n        description: Plot,\n        imgUrl: Poster,\n        imdbUrl: Website,\n      }));\n    } catch (error) {\n      this.setState({ error: error.message });\n    }\n  };\n\n  render() {\n    const { searchWord, error } = this.state;\n\n    return (\n      <BrowserRouter>\n        <div className=\"page\">\n          <div className=\"content\">\n            <div className=\"box\">\n              <FormField\n                error={error}\n                value={searchWord}\n                name=\"searchWord\"\n                placeholder=\"Type search word\"\n                label=\"Search film\"\n                onChange={this.handleSearchChange}\n              />\n              <button\n                onClick={() => this.searchFilm(searchWord)}\n                type=\"button\"\n                className=\"button is-primary\"\n              >\n                Search film\n              </button>\n            </div>\n\n            <Switch>\n              <Route\n                exact\n                path=\"/\"\n                component={() => (\n                  <FilmsList />\n                )}\n              />\n              <Route\n                exact\n                path=\"/film/:id\"\n                component={({ match }) => (\n                  <FilmDetails id={match.params.id} />\n                )}\n              />\n            </Switch>\n          </div>\n          <div className=\"sidebar\">\n            <NewFilm onAdd={this.handleAddFilm} />\n          </div>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport 'bulma/css/bulma.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}